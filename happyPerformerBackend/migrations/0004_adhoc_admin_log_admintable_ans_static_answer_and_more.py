# Generated by Django 4.2.2 on 2024-10-09 21:40

from django.db import migrations, models
import django.db.models.deletion
import happyPerformerBackend.validators


class Migration(migrations.Migration):

    dependencies = [
        ('happyPerformerBackend', '0003_leavetype'),
    ]

    operations = [
        migrations.CreateModel(
            name='Adhoc',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('dept', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=20)),
                ('mon', models.CharField(max_length=20)),
                ('year', models.PositiveSmallIntegerField()),
                ('amt', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Admin_log',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('admin_id', models.CharField(default=None, max_length=200, null=True)),
                ('my_ip', models.CharField(default=None, max_length=200, null=True)),
                ('logged_in', models.CharField(default=None, max_length=200, null=True)),
                ('logged_out', models.CharField(default=None, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Admintable',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.CharField(default=None, max_length=200, null=True)),
                ('role', models.CharField(default=None, max_length=200, null=True)),
                ('full_name', models.CharField(default=None, max_length=200, null=True)),
                ('user', models.CharField(default=None, max_length=255, null=True)),
                ('password', models.CharField(default=None, max_length=255, null=True)),
                ('otp_id', models.CharField(default=None, max_length=200, null=True)),
                ('otp', models.CharField(default=None, max_length=200, null=True)),
                ('status', models.CharField(default=None, max_length=200, null=True)),
                ('user_pics', models.CharField(default=None, max_length=200, null=True)),
                ('created_at', models.CharField(default=None, max_length=200, null=True)),
                ('modified_at', models.CharField(default=None, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ans_static',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('qid', models.CharField(max_length=50)),
                ('ansid', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('qid', models.TextField()),
                ('ansid', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Banktransferstatement',
            fields=[
                ('batchid', models.BigAutoField(primary_key=True, serialize=False)),
                ('debitno', models.CharField(max_length=21)),
                ('date', models.CharField(max_length=21)),
                ('narration', models.CharField(max_length=21)),
                ('filename', models.CharField(max_length=21)),
                ('name', models.CharField(max_length=30)),
                ('bank', models.CharField(max_length=40)),
                ('branch', models.CharField(max_length=20)),
                ('ifsc', models.CharField(max_length=20)),
                ('accountno', models.BigIntegerField()),
                ('amount', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('case_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('create_for', models.CharField(max_length=50)),
                ('case_type', models.CharField(max_length=50)),
                ('case_title', models.TextField()),
                ('case_desc', models.TextField()),
                ('case_date', models.DateTimeField(auto_now_add=True)),
                ('case_status', models.CharField(default='New', max_length=30)),
                ('assigned_to', models.ForeignKey(db_column='assigned_to', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_cases', to='happyPerformerBackend.employee')),
                ('created_by', models.ForeignKey(db_column='created_by', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_cases', to='happyPerformerBackend.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Chatbot_categories',
            fields=[
                ('cat_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=255)),
                ('c_id', models.ForeignKey(db_column='c_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.company')),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('cid', models.BigAutoField(primary_key=True, serialize=False)),
                ('uid', models.CharField(default=None, max_length=120, null=True)),
                ('date', models.TextField(default=None, null=True)),
                ('message', models.TextField(default=None, null=True)),
                ('vid', models.CharField(max_length=300)),
                ('course_name', models.CharField(default=None, max_length=300, null=True)),
                ('com', models.CharField(max_length=3000)),
            ],
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('course_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('course_title', models.CharField(max_length=25)),
                ('description', models.CharField(max_length=500)),
                ('thumbnail', models.ImageField(upload_to='thumbnails/', validators=[happyPerformerBackend.validators.validate_image_extension])),
                ('c_name', models.CharField(max_length=30)),
                ('c_id', models.ForeignKey(db_column='c_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.company')),
            ],
        ),
        migrations.CreateModel(
            name='Earnedleave',
            fields=[
                ('emp_emailid', models.CharField(default='A@gmail.com', max_length=50, primary_key=True, serialize=False)),
                ('earnedleave', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Email_alert',
            fields=[
                ('alert_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.IntegerField()),
                ('type', models.CharField(default=None, max_length=200, null=True)),
                ('title', models.TextField(default=None, null=True)),
                ('deadline', models.TextField(default=None, null=True)),
                ('emp_emailid', models.CharField(default=None, max_length=100, null=True)),
                ('c_name', models.CharField(default=None, max_length=30, null=True)),
                ('task_id', models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('evt_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('evt_type', models.CharField(default=None, max_length=20, null=True)),
                ('evt_start', models.DateField()),
                ('evt_end', models.DateField()),
                ('evt_text', models.TextField()),
                ('evt_color', models.CharField(max_length=7)),
                ('status', models.BooleanField(default=False)),
                ('emp_emailid', models.CharField(default=None, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Expenses',
            fields=[
                ('expense_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('emp_emailid', models.CharField(max_length=50)),
                ('expense', models.IntegerField()),
                ('expensedate', models.DateField(max_length=15)),
                ('expenseitm', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('file_name', models.CharField(default=None, max_length=255, null=True)),
                ('job_desc_id', models.IntegerField(default=None, null=True)),
                ('sop_id', models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50)),
                ('eid', models.TextField()),
                ('score', models.IntegerField()),
                ('level', models.IntegerField()),
                ('correct', models.IntegerField()),
                ('wrong', models.IntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('timestamp', models.BigIntegerField()),
                ('status', models.CharField(max_length=40)),
                ('score_updated', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Jd_table',
            fields=[
                ('jd_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Job_desc',
            fields=[
                ('job_desc_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('jd_name', models.CharField(default=None, max_length=150, null=True)),
                ('responsiblities', models.CharField(max_length=5000)),
                ('sdate', models.DateField(default=None, null=True)),
                ('ratings', models.IntegerField(default=0)),
                ('selfratings', models.IntegerField(default=0)),
                ('remarks', models.CharField(default=None, max_length=50, null=True)),
                ('status', models.IntegerField(default=0)),
                ('email_id', models.CharField(max_length=100)),
                ('jid', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Kra_desc',
            fields=[
                ('kra_no', models.BigAutoField(primary_key=True, serialize=False)),
                ('KRA', models.CharField(max_length=50)),
                ('Weightage', models.IntegerField()),
                ('KPI', models.CharField(max_length=500)),
                ('Measurement', models.IntegerField()),
                ('submission_date', models.DateTimeField(default=None)),
                ('email_id', models.CharField(default=None, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Kra_table',
            fields=[
                ('kra_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Leavecounttemp',
            fields=[
                ('emp_emailid', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('casualleave', models.IntegerField(default=15)),
                ('medicalleave', models.IntegerField(default=15)),
                ('lopleave', models.IntegerField(default=365)),
                ('earnedleave', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('emp_emailid', models.CharField(max_length=255)),
                ('department', models.CharField(max_length=255)),
                ('lamt', models.DecimalField(decimal_places=2, max_digits=10)),
                ('mamt', models.DecimalField(decimal_places=2, max_digits=10)),
                ('startdate', models.DateField()),
                ('reason', models.TextField()),
                ('status', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('message', models.TextField(null=True)),
                ('created_at', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Off_cycle',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('tname', models.CharField(max_length=20)),
                ('amt', models.IntegerField()),
                ('effdt', models.DateField()),
                ('note', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Options',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('qid', models.CharField(max_length=50)),
                ('option', models.CharField(max_length=2000)),
                ('optionid', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Options_static',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('qid', models.CharField(max_length=50)),
                ('option', models.CharField(max_length=100)),
                ('optionid', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Ot',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('hours_worked', models.IntegerField()),
                ('hourly_rate', models.IntegerField()),
                ('overtime', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='OTPVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('emp_emailid', models.EmailField(max_length=254, unique=True)),
                ('otp', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'OTP Verification',
                'verbose_name_plural': 'OTP Verifications',
            },
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('eid', models.TextField()),
                ('qid', models.TextField()),
                ('qns', models.TextField()),
                ('choice', models.IntegerField()),
                ('sn', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Questions_static',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('vid', models.CharField(max_length=100)),
                ('qid', models.CharField(max_length=100)),
                ('qns', models.CharField(max_length=5000)),
                ('choice', models.IntegerField()),
                ('sn', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('course_title', models.CharField(max_length=100)),
                ('correct', models.IntegerField(default=0)),
                ('wrong', models.DecimalField(decimal_places=2, max_digits=5)),
                ('total_marks', models.IntegerField(default=0)),
                ('passing', models.IntegerField()),
                ('total', models.IntegerField()),
                ('time', models.IntegerField()),
                ('date', models.TextField()),
                ('status', models.CharField(max_length=10)),
                ('eid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quizzes', to='happyPerformerBackend.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Reporting',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('c_id', models.IntegerField()),
                ('Reporting_from', models.CharField(max_length=50)),
                ('Reporting_to', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Resp_148feedback_form',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Resp_148testt365g',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Resp_157example_form',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Resp_157feedback_form',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Resp_47feedback_test',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Resp_47gh',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Resp_59employee_detail_form',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Resp_59feedback_form',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('q1', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Resp_59feedback_form1',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('q2', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Resp_60feedback_form',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('hay', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Resp_employee_detail_form',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Score_final',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50)),
                ('score', models.IntegerField()),
                ('time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sop',
            fields=[
                ('sop_id', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('s_name', models.CharField(max_length=30)),
                ('sdate', models.DateField(blank=True, null=True)),
                ('sop_file', models.FileField(default=None, null=True, upload_to='sop/')),
                ('ratings', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], default=1, null=True)),
                ('selfratings', models.IntegerField(default=0)),
                ('remarks', models.CharField(default=None, max_length=500, null=True)),
                ('d_id', models.ForeignKey(db_column='d_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.department')),
            ],
        ),
        migrations.CreateModel(
            name='User_answer',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('qid', models.CharField(max_length=50)),
                ('ans', models.CharField(max_length=50)),
                ('correctans', models.CharField(max_length=50)),
                ('eid', models.CharField(max_length=50)),
                ('username', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Work_exp',
            fields=[
                ('W_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('comp_name', models.CharField(blank=True, max_length=150, null=True)),
                ('comp_location', models.CharField(blank=True, max_length=250, null=True)),
                ('designation', models.CharField(blank=True, max_length=150, null=True)),
                ('gross_salary', models.FloatField(blank=True, null=True)),
                ('leave_reason', models.TextField(blank=True, null=True)),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Todotasks',
            fields=[
                ('tid', models.BigAutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=300)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('evt', models.ForeignKey(blank=True, db_column='evt_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.events')),
            ],
        ),
        migrations.CreateModel(
            name='Tblleaves',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ToDate', models.CharField(max_length=120)),
                ('FromDate', models.CharField(max_length=120)),
                ('Days', models.IntegerField()),
                ('Description', models.CharField(max_length=500)),
                ('PostingDate', models.DateTimeField(auto_now_add=True)),
                ('AdminRemark', models.CharField(blank=True, max_length=500, null=True)),
                ('AdminRemarkDate', models.DateTimeField(blank=True, null=True)),
                ('Status', models.IntegerField()),
                ('IsRead', models.IntegerField()),
                ('LeaveType', models.ForeignKey(db_column='LeaveType', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.leavetype')),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tasks',
            fields=[
                ('task_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.BooleanField(default=False)),
                ('sdate', models.DateField(blank=True, null=True)),
                ('edate', models.DateTimeField(blank=True, null=True)),
                ('imp', models.BooleanField(default=False)),
                ('selfratings', models.IntegerField(default=0)),
                ('ratings', models.IntegerField(default=0)),
                ('remark', models.CharField(blank=True, max_length=30, null=True)),
                ('d_id', models.ForeignKey(db_column='d_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Tasks', to='happyPerformerBackend.department')),
                ('dpt_auditor', models.ForeignKey(db_column='dpt_auditor', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks_dpt_auditor', to='happyPerformerBackend.employee')),
                ('dpt_head', models.ForeignKey(db_column='dpt_head', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks_dpt_head', to='happyPerformerBackend.employee')),
                ('emp_emailid', models.ForeignKey(blank=True, db_column='emp_emailid', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks_emp_emailid', to='happyPerformerBackend.employee', unique=True)),
                ('job_desc_id', models.ForeignKey(blank=True, db_column='job_desc_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks_job_desc', to='happyPerformerBackend.job_desc')),
                ('kra_id', models.ForeignKey(blank=True, db_column='kra_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks_kra', to='happyPerformerBackend.kra_table')),
                ('sop_id', models.ForeignKey(blank=True, db_column='sop_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks_sop', to='happyPerformerBackend.sop')),
                ('tid', models.ForeignKey(blank=True, db_column='tid', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks_tid', to='happyPerformerBackend.todotasks')),
            ],
        ),
        migrations.CreateModel(
            name='Salary1',
            fields=[
                ('sal_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('payout_month', models.CharField(max_length=50)),
                ('effective_from', models.CharField(blank=True, max_length=50, null=True)),
                ('revision', models.IntegerField(blank=True, null=True)),
                ('basic', models.FloatField()),
                ('hra', models.FloatField()),
                ('conveyance', models.FloatField()),
                ('da', models.FloatField()),
                ('special_allowance', models.FloatField()),
                ('monthly_ctc', models.FloatField()),
                ('annual_ctc', models.FloatField()),
                ('Eligible_Deductions', models.FloatField()),
                ('Yearly_Taxable_Salary', models.FloatField()),
                ('Total_Tax_Liability', models.FloatField()),
                ('Monthly_TDS', models.FloatField()),
                ('Monthly_EPF', models.FloatField()),
                ('Monthly_Professional_Tax', models.FloatField()),
                ('Net_Salary', models.FloatField()),
                ('paymentmethod', models.CharField(default='Bank', max_length=50)),
                ('notes', models.CharField(max_length=50)),
                ('remarks', models.CharField(max_length=50)),
                ('holdsalary', models.IntegerField(default=0)),
                ('paid', models.IntegerField(default=0)),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.bank_details', to_field='emp_emailid', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Salary',
            fields=[
                ('sal_id', models.IntegerField(primary_key=True, serialize=False)),
                ('payout_month', models.CharField(max_length=50)),
                ('effective_from', models.CharField(blank=True, max_length=50, null=True)),
                ('revision', models.IntegerField(blank=True, null=True)),
                ('basic', models.FloatField()),
                ('hra', models.FloatField()),
                ('conveyance', models.FloatField()),
                ('da', models.FloatField()),
                ('special_allowance', models.FloatField()),
                ('monthly_ctc', models.FloatField()),
                ('annual_ctc', models.FloatField()),
                ('Eligible_Deductions', models.FloatField()),
                ('Yearly_Taxable_Salary', models.FloatField()),
                ('Total_Tax_Liability', models.FloatField()),
                ('Monthly_TDS', models.FloatField()),
                ('Monthly_EPF', models.FloatField()),
                ('Monthly_Professional_Tax', models.FloatField()),
                ('Net_Salary', models.FloatField()),
                ('paymentmethod', models.CharField(default='Bank', max_length=50)),
                ('notes', models.CharField(max_length=50)),
                ('remarks', models.CharField(max_length=50)),
                ('holdsalary', models.IntegerField(default=0)),
                ('paid', models.IntegerField(default=0)),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.bank_details', to_field='emp_emailid', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Resignation',
            fields=[
                ('R_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('submit_date', models.DateTimeField(auto_now_add=True)),
                ('exp_leave', models.DateField()),
                ('notice_per', models.IntegerField(default=30)),
                ('leave_reason', models.TextField()),
                ('leave_reason_2', models.TextField(blank=True, null=True)),
                ('leave_reason_3', models.TextField(blank=True, null=True)),
                ('leave_date', models.DateField(blank=True, null=True)),
                ('notice_serve', models.IntegerField()),
                ('settle_date', models.DateField(blank=True, null=True)),
                ('shortfall_date', models.IntegerField(blank=True, null=True)),
                ('exit_interview', models.DateField(blank=True, null=True)),
                ('last_working', models.DateField(blank=True, null=True)),
                ('status', models.CharField(default='Pending', max_length=30)),
                ('approved_by', models.CharField(blank=True, max_length=50, null=True)),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='RazorpayOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.CharField(max_length=255, unique=True)),
                ('amount', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('salary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.salary')),
            ],
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chosen_options', models.JSONField()),
                ('score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('time_taken', models.IntegerField()),
                ('is_passed', models.BooleanField()),
                ('attempt_date', models.DateTimeField(auto_now_add=True)),
                ('total_correct', models.IntegerField(default=0)),
                ('total_unattempted', models.IntegerField(default=0)),
                ('total_wrong', models.IntegerField(default=0)),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee')),
                ('quiz', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='happyPerformerBackend.quiz')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('correct_answer', models.TextField()),
                ('quiz', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='happyPerformerBackend.quiz')),
            ],
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('Q_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('q_type', models.CharField(max_length=100)),
                ('q_degree', models.CharField(max_length=100)),
                ('q_clg', models.TextField()),
                ('q_uni', models.TextField()),
                ('q_duration', models.IntegerField()),
                ('q_yop', models.IntegerField()),
                ('q_comment', models.TextField(blank=True, null=True)),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Poifiles_new1',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Year', models.CharField(max_length=7)),
                ('Investment_1', models.CharField(default='80C', max_length=10)),
                ('actualAmount_80C', models.IntegerField(default='0')),
                ('Doc_80C', models.CharField(max_length=255, null=True)),
                ('Status1', models.CharField(default='Pending', max_length=20)),
                ('Investment_2', models.CharField(default='80D', max_length=4)),
                ('actualAmount_80D', models.IntegerField(default='0')),
                ('Doc_80D', models.CharField(max_length=255, null=True)),
                ('Status2', models.CharField(default='Pending', max_length=20)),
                ('Investment_3', models.CharField(default='OIE', max_length=4)),
                ('OIE_actualAmount', models.IntegerField(default='0')),
                ('OIE_Doc', models.CharField(max_length=255, null=True)),
                ('Status3', models.CharField(default='Pending', max_length=20)),
                ('Investment_4', models.CharField(default='OSI', max_length=4)),
                ('OSI_actualAmount', models.IntegerField(default='0')),
                ('OSI_Doc', models.CharField(max_length=255, null=True)),
                ('Status4', models.CharField(default='Pending', max_length=20)),
                ('Emp_id', models.ForeignKey(db_column='emp_emailid', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Poifiles_new',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Year', models.CharField(max_length=7)),
                ('Investment_1', models.CharField(default='80C', max_length=10)),
                ('actualAmount_80C', models.IntegerField()),
                ('Doc_80C', models.CharField(max_length=255)),
                ('Status1', models.CharField(default='Pending', max_length=20)),
                ('Investment_2', models.CharField(default='80D', max_length=4)),
                ('actualAmount_80D', models.IntegerField()),
                ('Doc_80D', models.CharField(max_length=255)),
                ('Status2', models.CharField(default='Pending', max_length=20)),
                ('Investment_3', models.CharField(default='OIE', max_length=4)),
                ('OIE_actualAmount', models.IntegerField()),
                ('OIE_Doc', models.CharField(max_length=255)),
                ('Status3', models.CharField(default='Pending', max_length=20)),
                ('Investment_4', models.CharField(default='OSI', max_length=4)),
                ('OSI_actualAmount', models.IntegerField()),
                ('OSI_Doc', models.CharField(max_length=255)),
                ('Status4', models.CharField(default='Pending', max_length=20)),
                ('Emp_id', models.ForeignKey(db_column='emp_emailid', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Personal_details',
            fields=[
                ('id', models.AutoField(default=None, primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('Contact', models.CharField(blank=True, max_length=20, null=True)),
                ('emergency_name', models.CharField(blank=True, max_length=60, null=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=60, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('post_code', models.CharField(blank=True, max_length=10, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('edit', models.CharField(default='enable', max_length=10)),
                ('mail', models.OneToOneField(db_column='emp_emailid', on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Pdf',
            fields=[
                ('pdf_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pdf_name', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('descr', models.TextField()),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.courses')),
            ],
        ),
        migrations.CreateModel(
            name='Passport',
            fields=[
                ('Pass_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('passport_no', models.CharField()),
                ('passport_name', models.CharField(max_length=200)),
                ('passport_validity', models.DateField()),
                ('passport_pic', models.FileField(default=None, upload_to='Passport/', validators=[happyPerformerBackend.validators.validate_image_extension])),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pan',
            fields=[
                ('Pan_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pan_no', models.CharField(max_length=30)),
                ('pan_name', models.CharField(max_length=200)),
                ('pan_pic', models.FileField(default=None, upload_to='PAN/', validators=[happyPerformerBackend.validators.validate_image_extension])),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='options', to='happyPerformerBackend.question')),
            ],
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('login_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Licence',
            fields=[
                ('Licence_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('licence_no', models.CharField(max_length=100)),
                ('licence_name', models.CharField(default=None, max_length=100)),
                ('expiry_date', models.DateField()),
                ('licence_pic', models.FileField(default=None, upload_to='DrivingLicense/', validators=[happyPerformerBackend.validators.validate_image_extension])),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Leave_Encashment',
            fields=[
                ('LE_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('txndt', models.DateField()),
                ('refn', models.IntegerField()),
                ('effdt', models.DateField()),
                ('emp', models.CharField(max_length=20)),
                ('type', models.CharField(max_length=20)),
                ('blnc', models.IntegerField()),
                ('pdays', models.IntegerField()),
                ('sal', models.IntegerField(null=True)),
                ('enclve', models.IntegerField(null=True)),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Kra',
            fields=[
                ('kra_no', models.BigAutoField(primary_key=True, serialize=False)),
                ('KRA', models.CharField(max_length=50)),
                ('Weightage', models.IntegerField()),
                ('KPI', models.CharField(max_length=500)),
                ('Target', models.CharField(max_length=500)),
                ('ratingsscale', models.CharField(max_length=500)),
                ('ratings', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')], default=1, null=True)),
                ('selfratings', models.IntegerField(default=0)),
                ('remarks', models.CharField(default=None, max_length=500, null=True)),
                ('status', models.IntegerField(default=0)),
                ('email_id', models.CharField(default=None, max_length=100, null=True)),
                ('Measurement', models.IntegerField(default=0, null=True)),
                ('submission_date', models.DateTimeField(default=None)),
                ('kra_id', models.ForeignKey(db_column='kra_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.kra_table')),
            ],
        ),
        migrations.CreateModel(
            name='Job_info',
            fields=[
                ('J_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('job_title', models.CharField(default=None, max_length=250, null=True)),
                ('department', models.CharField(default=None, max_length=150, null=True)),
                ('working_type', models.CharField(default=None, max_length=100, null=True)),
                ('start_date', models.DateField(default=None, null=True)),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Itdeclaration_osi_new1',
            fields=[
                ('Emp_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('Investment1', models.CharField(default='Income from other sources', max_length=50)),
                ('Investment1_Amount', models.IntegerField()),
                ('Investment2', models.CharField(default='Interest Earned from Savings Deposit', max_length=50)),
                ('Investment2_Amount', models.IntegerField()),
                ('Investment3', models.CharField(default='Interest Earned from Fixed Deposit', max_length=50)),
                ('Investment3_Amount', models.IntegerField()),
                ('Investment4', models.CharField(default='Interest Earned from National Savings Certificates', max_length=50)),
                ('Investment4_Amount', models.IntegerField()),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Itdeclaration_osi_new',
            fields=[
                ('Emp_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('Investment1', models.CharField(default='Income from other sources', max_length=50)),
                ('Investment1_Amount', models.IntegerField()),
                ('Investment2', models.CharField(default='Interest Earned from Savings Deposit', max_length=50)),
                ('Investment2_Amount', models.IntegerField()),
                ('Investment3', models.CharField(default='Interest Earned from Fixed Deposit', max_length=50)),
                ('Investment3_Amount', models.IntegerField()),
                ('Investment4', models.CharField(default='Interest Earned from National Savings certificates', max_length=50)),
                ('Investment4_Amount', models.IntegerField()),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Itdeclaration_oie_new1',
            fields=[
                ('Emp_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('Investment1', models.CharField(default='Additional Exemptions on voluntary NPS', max_length=50)),
                ('Investment1_Amount', models.IntegerField(default=0)),
                ('Investment2', models.CharField(default='Rajiv Gandhi Equity savings scheme', max_length=50)),
                ('Investment2_Amount', models.IntegerField(default=0)),
                ('Investment3', models.CharField(default='Treatment of dependent with disability', max_length=50)),
                ('Investment3_Amount', models.IntegerField(default=0)),
                ('Investment4', models.CharField(default='Treatment of dependent with severe disability', max_length=50)),
                ('Investment4_Amount', models.IntegerField(default=0)),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Itdeclaration_oie_new',
            fields=[
                ('Emp_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('Investment1', models.CharField(default='Additional Exemptions on voluntary NPS', max_length=50)),
                ('Investment1_Amount', models.IntegerField(default=0)),
                ('Investment2', models.CharField(default='Rajiv Gandhi Equity savings scheme', max_length=50)),
                ('Investment2_Amount', models.IntegerField(default=0)),
                ('Investment3', models.CharField(default='Treatment of dependent with disability', max_length=50)),
                ('Investment3_Amount', models.IntegerField(default=0)),
                ('Investment4', models.CharField(default='Treatment of dependent with severe disability', max_length=50)),
                ('Investment4_Amount', models.IntegerField(default=0)),
                ('emp_emaiid', models.ForeignKey(db_column='emp_emailid', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Itdeclaration80d_new1',
            fields=[
                ('Emp_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('Investment1', models.CharField(default='Medi claim Policy for Self, Spouse, Children-80D', max_length=100)),
                ('Investment1_Amount', models.IntegerField(default=0)),
                ('Investment2', models.CharField(default='Medi claim Policy for Self, Spouse, Children for senior citizen-80D', max_length=100)),
                ('Investment2_Amount', models.IntegerField(default=0)),
                ('Investment3', models.CharField(default='Medi claim Policy for Parents-80D', max_length=100)),
                ('Investment3_Amount', models.IntegerField(default=0)),
                ('Investment4', models.CharField(default='Medi claim Policy or Medical Bills for parents for senior citizen-80D', max_length=100)),
                ('Investment4_Amount', models.IntegerField(default=0)),
                ('Investment5', models.CharField(default='Preventive health check up - 80D', max_length=100)),
                ('Investment5_Amount', models.IntegerField(default=0)),
                ('Investment6', models.CharField(default='Preventive health check up for parents - 80D', max_length=100)),
                ('Investment6_Amount', models.IntegerField(default=0)),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Itdeclaration80d_new',
            fields=[
                ('Emp_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('Investment1', models.CharField(default='Medi claim Policy for Self,Spouse,Children-80D', max_length=100)),
                ('Investment1_Amount', models.IntegerField(default=0)),
                ('Investment2', models.CharField(default='Medi claim Policy for Self,Spouse,Children for senior citizen-80D', max_length=100)),
                ('Investment2_Amount', models.IntegerField(default=0)),
                ('Investment3', models.CharField(default='Medi claim Policy for Parents-80D', max_length=100)),
                ('Investment3_Amount', models.IntegerField(default=0)),
                ('Investment4', models.CharField(default='Medi claim Policy or Medical Bills for parents for senior citizen-80D', max_length=100)),
                ('Investment4_Amount', models.IntegerField(default=0)),
                ('Investment5', models.CharField(default='Preventive health check up - 80D', max_length=100)),
                ('Investment5_Amount', models.IntegerField(default=0)),
                ('Investment6', models.CharField(default='Preventive health check up for parents - 80D', max_length=100)),
                ('Investment6_Amount', models.IntegerField(default=0)),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ITDeclaration80c',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Emp_id', models.CharField(max_length=50)),
                ('Investment1', models.CharField(default='Life Insurance Premium', max_length=30)),
                ('Investment1_Amount', models.IntegerField(default=0)),
                ('Investment2', models.CharField(default='Public Provident Fund', max_length=30)),
                ('Investment2_Amount', models.IntegerField(default=0)),
                ('Investment3', models.CharField(default='Unit-Linked Insurance Plan', max_length=30)),
                ('Investment3_Amount', models.IntegerField(default=0)),
                ('Investment4', models.CharField(default='National Savings Certificates', max_length=30)),
                ('Investment4_Amount', models.IntegerField(default=0)),
                ('Investment5', models.CharField(default='Mutual Funds', max_length=30)),
                ('Investment5_Amount', models.IntegerField(default=0)),
                ('Investment6', models.CharField(default='Tution Fees', max_length=30)),
                ('Investment6_Amount', models.IntegerField(default=0)),
            ],
            options={
                'indexes': [models.Index(fields=['Emp_id'], name='EmpID_to_Empemail')],
            },
        ),
        migrations.CreateModel(
            name='Forms',
            fields=[
                ('form_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('form_type', models.CharField(choices=[('job_description', 'Job Description'), ('Kra_table', 'KRA Table'), ('sop', 'SOP'), ('', 'None')], default='', max_length=50)),
                ('form_data', models.CharField(default=None, max_length=100, null=True)),
                ('ratings', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], default='1', max_length=1)),
                ('remark', models.CharField(max_length=50)),
                ('appreciation', models.CharField(max_length=50)),
                ('status', models.BooleanField(default=None)),
                ('date', models.DateField()),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('fid', models.BigAutoField(primary_key=True, serialize=False)),
                ('skill', models.CharField(max_length=1000)),
                ('from_email', models.CharField(max_length=30)),
                ('reason', models.CharField(max_length=100)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('emp_emailid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Faqs',
            fields=[
                ('faq_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=500)),
                ('answer', models.CharField(default=None, max_length=1000, null=True)),
                ('imp', models.BooleanField(default=False)),
                ('c_id', models.ForeignKey(db_column='c_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='happyPerformerBackend.company')),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='faqs_created', to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Family_details',
            fields=[
                ('F_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('F_name', models.CharField(max_length=200)),
                ('F_gender', models.CharField(max_length=50)),
                ('F_dob', models.DateField()),
                ('F_contact', models.CharField(max_length=15)),
                ('F_mail', models.CharField(max_length=100)),
                ('F_relation', models.CharField(max_length=100)),
                ('F_comment', models.TextField()),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Endorsement',
            fields=[
                ('e_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('emailid', models.CharField(max_length=50)),
                ('endorse', models.CharField(max_length=1000)),
                ('from_email', models.CharField(max_length=30)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'indexes': [models.Index(fields=['emailid'], name='endorsement_emailid')],
            },
        ),
        migrations.CreateModel(
            name='Dependent',
            fields=[
                ('D_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('D_name', models.CharField(blank=True, max_length=150, null=True)),
                ('D_gender', models.CharField(blank=True, max_length=50, null=True)),
                ('D_dob', models.DateField(blank=True, null=True)),
                ('D_relation', models.CharField(blank=True, max_length=100, null=True)),
                ('D_desc', models.TextField(blank=True, null=True)),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Custom_letters',
            fields=[
                ('seq', models.BigAutoField(primary_key=True, serialize=False)),
                ('letter_name', models.CharField(max_length=250)),
                ('letter_content', models.TextField(default=None, null=True)),
                ('alloc', models.CharField(default=None, max_length=250, null=True)),
                ('c_id', models.ForeignKey(db_column='c_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.company')),
            ],
        ),
        migrations.CreateModel(
            name='Custom_forms_questions',
            fields=[
                ('label', models.CharField(max_length=250)),
                ('type', models.CharField(default=None, max_length=20, null=True)),
                ('ID', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('optionName', models.CharField(default=None, max_length=250, null=True)),
                ('form_name', models.CharField(max_length=255)),
                ('c_id', models.ForeignKey(db_column='c_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.company')),
            ],
        ),
        migrations.CreateModel(
            name='Custom_forms',
            fields=[
                ('seq', models.BigAutoField(primary_key=True, serialize=False)),
                ('form_name', models.CharField(max_length=255)),
                ('alloc', models.TextField(default=None, max_length=250, null=True)),
                ('c_id', models.ForeignKey(db_column='c_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.company')),
            ],
        ),
        migrations.CreateModel(
            name='Course_employee',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.IntegerField()),
                ('Start_date', models.DateTimeField(auto_now_add=True)),
                ('course_title', models.CharField(default=None, max_length=25)),
                ('course_id', models.ForeignKey(db_column='course_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.courses')),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Clearance',
            fields=[
                ('Clearance_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Accounts', models.CharField(default='No', max_length=5)),
                ('Hr', models.CharField(default='No', max_length=5)),
                ('Hr_Plant', models.CharField(default='No', max_length=5)),
                ('IT', models.CharField(default='No', max_length=5)),
                ('Project', models.CharField(default='No', max_length=5)),
                ('status', models.CharField(default='Pending', max_length=20)),
                ('given_by', models.ForeignKey(db_column='given_by', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clearances_given', to='happyPerformerBackend.employee')),
                ('given_to', models.ForeignKey(db_column='given_to', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clearnaces_to', to='happyPerformerBackend.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Chatbot_questions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=255)),
                ('reply', models.CharField(max_length=255)),
                ('category_id', models.ForeignKey(db_column='category_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.chatbot_categories')),
            ],
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('chatid', models.BigAutoField(primary_key=True, serialize=False)),
                ('sender_id', models.CharField(max_length=50)),
                ('reciever_id', models.CharField(max_length=50)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('case_id', models.ForeignKey(db_column='case_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.case')),
            ],
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('en_no', models.CharField(max_length=50)),
                ('course_title', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.courses')),
                ('email_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('log_type', models.CharField(blank=True, default='Unknown', max_length=10, null=True)),
                ('user_ip', models.CharField(default=None, max_length=200, null=True)),
                ('latitude', models.CharField(default=None, max_length=200, null=True)),
                ('longitude', models.CharField(default=None, max_length=200, null=True)),
                ('datetime_log', models.CharField(default=None, max_length=200, null=True)),
                ('date_updated', models.DateTimeField(default=None, null=True)),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Adhaar',
            fields=[
                ('A_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('adhaar_no', models.BigIntegerField()),
                ('adhaar_name', models.CharField(max_length=200)),
                ('enroll_no', models.PositiveBigIntegerField()),
                ('adhaar_pic', models.FileField(upload_to='adhaar_pics/', validators=[happyPerformerBackend.validators.validate_image_extension])),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.employee', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('video_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('video_name', models.CharField(max_length=100)),
                ('location', models.TextField()),
                ('descr', models.CharField(max_length=200)),
                ('course_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.courses')),
            ],
            options={
                'indexes': [models.Index(fields=['course_id'], name='happyPerfor_course__d4aeea_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='todotasks',
            index=models.Index(fields=['evt_id'], name='happyPerfor_evt_id_ea5491_idx'),
        ),
        migrations.AddIndex(
            model_name='tasks',
            index=models.Index(fields=['d_id'], name='happyPerfor_d_id_bdfd1e_idx'),
        ),
        migrations.AddIndex(
            model_name='tasks',
            index=models.Index(fields=['dpt_head'], name='happyPerfor_dpt_hea_0e0139_idx'),
        ),
        migrations.AddIndex(
            model_name='tasks',
            index=models.Index(fields=['dpt_auditor'], name='happyPerfor_dpt_aud_9fadf1_idx'),
        ),
        migrations.AddIndex(
            model_name='tasks',
            index=models.Index(fields=['emp_emailid'], name='happyPerfor_emp_ema_c017fd_idx'),
        ),
        migrations.AddIndex(
            model_name='tasks',
            index=models.Index(fields=['job_desc_id'], name='happyPerfor_job_des_8434d3_idx'),
        ),
        migrations.AddIndex(
            model_name='tasks',
            index=models.Index(fields=['kra_id'], name='happyPerfor_kra_id_b27266_idx'),
        ),
        migrations.AddIndex(
            model_name='tasks',
            index=models.Index(fields=['sop_id'], name='happyPerfor_sop_id_2ef652_idx'),
        ),
        migrations.AddIndex(
            model_name='tasks',
            index=models.Index(fields=['tid'], name='happyPerfor_tid_d6f2cc_idx'),
        ),
        migrations.AddIndex(
            model_name='poifiles_new1',
            index=models.Index(fields=['Emp_id'], name='happyPerfor_emp_ema_4b3a85_idx'),
        ),
        migrations.AddIndex(
            model_name='poifiles_new',
            index=models.Index(fields=['Emp_id'], name='happyPerfor_emp_ema_ddfe06_idx'),
        ),
        migrations.AddIndex(
            model_name='login',
            index=models.Index(fields=['emp_emailid'], name='login_emp_emailid_idx'),
        ),
        migrations.AddIndex(
            model_name='forms',
            index=models.Index(fields=['emp_emailid'], name='forms_emp_emailid_idx'),
        ),
    ]
